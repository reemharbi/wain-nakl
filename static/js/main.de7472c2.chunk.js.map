{"version":3,"sources":["components/WelcomeScreen/Welcome.js","components/Nav/Nav.js","components/Suggestion/Suggestion.js","components/Suggestion/MainComponent.js","components/History/HistoryList.js","App.js","serviceWorker.js","index.js","apps/assets/images/wain-nakl.png","apps/assets/images/bars-solid.svg","apps/assets/images/history.svg","apps/assets/images/upload.svg","apps/assets/images/like.svg","apps/assets/images/photo.svg","apps/assets/images/map.svg"],"names":["Welcome","className","src","logo","alt","to","Nav","style","height","history","href","target","rel","burger","Component","Suggestion","this","props","restaurants","name","rating","cat","link","map","photo","like","share","MainComponent","google","zoom","initialCenter","lat","resLat","lng","resLon","center","position","icon","url","anchor","maps","Point","scaledSize","Size","onClick","apiCall","GoogleApiWrapper","apiKey","LoadingContainer","HistoryList","userHistory","App","setUserCoordination","a","async","setState","userLat","coords","latitude","userLon","longitude","userAcc","accuracy","bind","state","navigator","geolocation","getCurrentPosition","then","res","fetch","response","json","resSuggestion","lon","console","log","catch","err","message","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.de7472c2.chunk.js","sourcesContent":["import React from \"react\";\nimport logo from \"../../apps/assets/images/wain-nakl.png\";\nimport \"./Welcome.css\";\nimport { Link } from \"react-router-dom\";\n\n// landing view \nconst Welcome = () => {\n  return (\n    <div className=\"main-main\">\n      <div className=\"main\">\n        <div className=\"container\">\n          <div className=\"logo-container\">\n            <img\n              className=\"logo animated bounceInUp\"\n              src={logo}\n              alt=\"logo\"\n            ></img>\n          </div>\n          <p className=\"title animated pulse\">وين ناكل؟</p>\n         {/* this loads the suggestion view */}\n          <Link\n            to=\"/suggestion\"\n            className=\"btn animated fadeIn\"\n          >\n            اقترح\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Welcome;\n","import React, { Component } from \"react\";\nimport burger from \"../../apps/assets/images/bars-solid.svg\";\nimport history from \"../../apps/assets/images/history.svg\";\nimport \"./Nav.css\";\nimport logo from \"../../apps/assets/images/wain-nakl.png\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Nav extends Component {\n  render() {\n    return (\n      <div className=\"nav-container navbar navbar-fixed-top\">\n        <div className=\"item hstry\">\n          <Link to=\"/history\" className=\"nav-title\">\n            <img style={{ height: \"3rem\" }} src={history} alt=\"history\"></img>\n          </Link>\n        </div>\n        <div className=\"nav-item text-center\">\n          <a className=\"nav-title\" href=\"/wain-nakl\">\n            وين ناكل؟\n          </a>\n\n          <a className=\"nav-title\" href=\"/wain-nakl\">\n            <img style={{ height: \"4rem\" }} src={logo} alt=\"logo\"></img>\n          </a>\n        </div>\n        <div className=\" item brgr\">\n          <a\n            className=\"nav-title\"\n            href=\"https://www.linkedin.com/in/reemalharbi/\"\n            target=\"_blank\" rel=\"noopener noreferrer\"\n          >\n            <img style={{ height: \"3rem\" }} src={burger} alt=\"burger\"></img>\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Suggestion.css\";\nimport share from \"../../apps/assets/images/upload.svg\";\nimport like from \"../../apps/assets/images/like.svg\";\nimport photo from \"../../apps/assets/images/photo.svg\";\nimport map from \"../../apps/assets/images/map.svg\";\n\n// display the restaurants details\nexport default class Suggestion extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"name\">\n          <h1 className=\"rest-name text-center\">\n            {this.props.restaurants.name}\n          </h1>\n        </div>\n        <div className=\"rest-details text-center\">\n          <p className=\"rating rate\">{this.props.restaurants.rating}</p>\n          <p className=\"rating ten\">/10</p>\n          <p>|</p>\n          <p className=\"category\"> {this.props.restaurants.cat}</p>\n        </div>\n        <div className=\"flex-container\">\n          <a href={this.props.restaurants.link} target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src={map} style={{ height: \"4rem\" }} alt=\"map\"></img>\n          </a>\n          <img\n            src={photo}\n            style={{ height: \"4rem\" }}\n            alt=\"restaurant-images\"\n          ></img>\n          <img src={like} style={{ height: \"4rem\" }} alt=\"like\"></img>\n          <img src={share} style={{ height: \"4rem\" }} alt=\"share\"></img>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Navbar from \"../Nav/Nav\";\nimport Suggestion from \"./Suggestion\";\nimport { BoxLoading } from \"react-loadingg\";\nimport { Link } from \"react-router-dom\";\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\nimport \"./MainComponent.css\";\n\n// show loading page while fetching information\nconst LoadingContainer = () => {\n  return <BoxLoading />;\n};\nexport class MainComponent extends Component {\n  render() {\n    //  \n    // console.log(\"Main Component COORDS: \", this.props.resLat, this.props.resLon);\n    // \n\n    // display suggestion's information and map\n    return (\n      <div>\n        <div className=\"main-suggestion\">\n          <div>shows\n            <Navbar />\n          </div>\n          <div className=\"suggestion-container\">\n            <Suggestion restaurants={this.props.restaurants} />\n          </div>\n        </div>\n        <div className=\"map-container\">\n          {/* google map component */}\n          <Map\n            google={this.props.google}\n            zoom={20}\n            initialCenter={{\n              lat: `${this.props.resLat}`,\n              lng: `${this.props.resLon}`\n            }}\n            center={{\n              lat: `${this.props.resLat}`,\n              lng: `${this.props.resLon}`\n            }}\n          >\n            <Marker\n              google={this.props.google}\n              position={{\n                lat: `${this.props.resLat}`,\n                lng: `${this.props.resLon}`\n              }}\n              icon={{\n                url:\n                  \"https://i.postimg.cc/xdXCkVC4/marker-1-1s-128px.png\",\n                anchor: new this.props.google.maps.Point(32, 32),\n                scaledSize: new this.props.google.maps.Size(80, 80)\n              }}\n            />\n          </Map>\n          <div className=\"another-suggestion\">\n            <Link\n              to=\"/suggestion\"\n              className=\"another-suggestion-btn\"\n              onClick={this.props.apiCall}\n            >\n              اقتراح أخر\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// exporting loader page / api key as HOC \nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDhNIRrD0JHn5PNrN22tDnGuCwm4-jo8lk\",\n  LoadingContainer: LoadingContainer\n})(MainComponent);\n","import React, { Component } from \"react\";\nimport Navbar from \"../Nav/Nav\";\nimport { BoxLoading } from \"react-loadingg\";\n\n// list user's favorite restaurants \nclass HistoryList extends Component {\n  render() {\n    return this.props.userHistory ? (\n      <div>\n        <div className=\"navbar\">\n          <Navbar />\n        </div>\n        <BoxLoading />\n      </div>\n    ) : (\n      <div>\n        <div className=\"navbar\">\n          <Navbar />\n        </div>\n        <div className=\"history-container text-center\">\n          <h1>Something to list....</h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HistoryList;\n","import React, { Component } from \"react\";\nimport Welcome from \"./components/WelcomeScreen/Welcome\";\nimport MainComponent from \"./components/Suggestion/MainComponent\";\nimport History from \"./components/History/HistoryList\";\nimport { BrowserRouter as Router, Route, HashRouter } from \"react-router-dom\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.apiCall = this.apiCall.bind(this);\n    this.state = {\n      history: [],\n      restaurants: [],\n      userLat: null,\n      userLon: null,\n      resLat: null,\n      resLon: null\n    };\n  }\n\n  // get user coordinates \n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setUserCoordination(position).then(res => this.apiCall());\n    });\n  }\n  // waits for api response to store user coordinates in state\n  setUserCoordination = async position =>\n    await this.setState({\n      userLat: position.coords.latitude,\n      userLon: position.coords.longitude,\n      userAcc: position.coords.accuracy\n    });\n\n    // use user coordinates to fetch restaurants' suggestions and details from api\n  apiCall() {\n    fetch(\n      `https://cors-anywhere.herokuapp.com/https://wainnakel.com/api/v1/GenerateFS.php?uid=${this.state.userLat},${this.state.userLon}&get_param=value`\n    )\n      .then(response => response.json())\n      .then(resSuggestion => {\n        this.setState({\n          restaurants: resSuggestion,\n          resLat: resSuggestion.lat,\n          resLon: resSuggestion.lon\n        });\n        console.log('APP ResSuggestion: ',resSuggestion);\n        console.log('APP ResLon: ',this.state.resLon);\n        console.log('APP ResLat: ',this.state.resLat);\n      })\n      .catch(err => console.log(err.message));\n  }\n\n  render() {\n    console.log('APP UserLat: ',this.state.userLat);\n    console.log('APP UserLon: ',this.state.userLon);\n    console.log('APP User Accuracy: ',this.state.userAcc);\n\n    const myMap = () => {\n      return (\n        <MainComponent\n          restaurants={this.state.restaurants}\n          resLat={this.state.resLat}\n          resLon={this.state.resLon}\n          apiCall={this.apiCall}\n        />\n      );\n    };\n\n    const welcomePage = () => {\n      return (\n        <Welcome userLat={this.state.userLat} userLon={this.state.userLon} resLat={this.state.resLat} resLon={this.state.resLon} />\n      );\n    };\n\n    const myHistory = () => {\n      return <History userHistory={this.state.history} />;\n    };\n\n    return (\n      // routes to render views \n      <HashRouter>\n        <div className=\"App\">\n          <Route exact path=\"/\" render={welcomePage} />\n          <Route exact path=\"/suggestion\" render={myMap} />\n          <Route exact path=\"/history\" render={myHistory} />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './apps/assets/stylesheets/normalize.css';\nimport './apps/assets/stylesheets/Fonts.css'\nimport './apps/assets/stylesheets/Animate.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/wain-nakl.3a00d41f.png\";","module.exports = __webpack_public_path__ + \"static/media/bars-solid.aed2850d.svg\";","module.exports = __webpack_public_path__ + \"static/media/history.1375ed32.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.f7548f7a.svg\";","module.exports = __webpack_public_path__ + \"static/media/like.c97c3ba3.svg\";","module.exports = __webpack_public_path__ + \"static/media/photo.b3a00e53.svg\";","module.exports = __webpack_public_path__ + \"static/media/map.6435a11b.svg\";"],"sourceRoot":""}